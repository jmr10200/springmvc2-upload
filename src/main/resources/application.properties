spring.output.ansi.enabled=always

# HTTP 요청 메시지 확인위한 설정
logging.level.org.apache.coyote.http11=debug

## 멀티파트 사용 옵션
# 업로드 사이즈 제한
# 사이즈 넘으면 SizeLimitExceededException 발생
# 파일 하나의 최대 사이즈. 기본 1MB
spring.servlet.multipart.max-file-size=1MB
# 멀티파트 요청 하나에 여러 파일을 업로드 할 수 있는데, 그 전체 용량. 기본 10MB
spring.servlet.multipart.max-request-size=10MB

# 기본 true
# false : 서블릿 컨테이너는 멀티파티와 관련된 처리를 하지 않는다.
spring.servlet.multipart.enabled=true
# 로그 보면 HttpServletRequest 객체가
# RequestFacade -> StandardMultipartHttpServletRequest 로 변하는 것 확인 가능

# 참고
# true 면, 스프링의 DispatcherServlet 에서 MultipartResolver 를 실행한다.
# 리졸버는 멀티파트 요청인 경우 서블릿 컨테이너가 전달하는 일반적인 HttpServletRequest 를
# MultipartHttpServletRequest 로 변환해서 반환한다.
# MultipartHttpServletRequest 는 HttpServletRequest 의 자식 인터페이스이고, 멀티파트와 관련된 추가 기능을 제공한다.

# 스프링이 제공하는 기본 멀티파트 리졸버는 MultipartHttpServletRequest 인터페이스를 구현한 StandardMultipartHttpServletRequest 를 반환한다.
# 컨트롤러에서 HttpServletRequest 대신 MultipartHttpServletRequest 를 주입받을 수 있는데,
# 이를 사용하면 멀티파트와 관련된 여러가지 처리를 편리하게 할 수 있다.
# 그러나 MultipartFile 이라는 것을 사용하는 것이 더 편리하므로, MultipartHttpServletRequest 를 잘 사용하지는 않는다.